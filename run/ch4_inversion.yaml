
# "machine"-dependent settings (paths, etc.)
cosmos :
  emissions: ${oc.env:SNIC_TMP}/emissions
  temp: /dev/shm/lumia
  footprints_cache : /dev/shm/footprints 
  footprints : /home/gmonteil/data/LUMIA/footprints/footprints_coco2_wp4_ch4
  congrad: /home/gmonteil/lumia/src/congrad/congrad.exe
  output: /home/gmonteil/data/CoCO2_WP5/lumia/${run.tag}
  correlations : /home/gmonteil/data/LUMIA/correlations
  cache_dir : ${.correlations}
  ncores : ${oc.env:SLURM_TASKS_PER_NODE}
  observations : .


donkey :
  emissions: /scratch/users/guillaume/lumia/fluxes
  temp: /dev/shm/lumia
  footprints_cache : /dev/shm/footprints 
  footprints : /scratch/users/guillaume/footprints/footprints_coco2_wp4_ch4
  congrad: ${lumia:src/congrad/congrad.exe}
  output: output/${run.tag}
  correlations : /scratch/users/guillaume/lumia/correlations
  cache_dir : ${.correlations}
  observations : .
  ncores : 24 


laptop :
  emissions : /scratch/LUMIA/fluxes/nc
  temp : /dev/shm/lumia
  footprints_cache : /dev/shm/footprints
  footprints : /scratch/LUMIA/footprints/footprints_coco2_wp4_ch4
  congrad : ${lumia:src/congrad/congrad.exe}
  output : output/${run.tag}
  correlations : /scratch/LUMIA/correlations
  cache_dir : ${.correlations}
  observations : ../../CoCO2_WP5/lumia
  ncores : 8


# General run settings
run:
  start: 2018-01-01
  end: 2019-01-01
  paths: ${machine}
  domain: eurocom025x025
  optimizer : ${cg_scipy}
  tag : v3_20230830_core
  interval : 1d
  footprints_archive : swestore:LUMIA/footprints/${.domain}/${.interval}/
  spinup : 1MS
  spindown : 1MS
  ncores : ${machine.ncores}


# Grids
grid:
  eurocom025x025: "${Grid:{lon0:-15, lat0:33, lon1:35, lat1:73, dlon:0.25, dlat:0.25}}"
  eurocom05x05: "${Grid:{lon0:-15, lat0:33, lon1:35, lat1:73, dlon:0.25, dlat:0.25}}"


# Observation files and uncertainties
observations :
  start : ${run.start}
  end : ${run.end}
  file : ${run.paths.observations}/observations_coco2_ch4_core.tar.gz
  validation_file : observations_coco2_ch4_valid.tar.gz
  uncertainties :
    err_min : 20.
    err_fac : 1.
  rename : 
    mix_bg : mix_background
  

# Emissions
emissions:
  tracers: [ ch4 ]
  ch4:
    region: ${grid.${run.domain}}
    interval: ${run.interval}
    categories:
      fossil: fossil.CoCO2
      agriwaste: agriwaste.CoCO2
      termites: termites.CoCO2
      geological: geological.CoCO2
      lakes: lakes.CoCO2
      ocean: ocean.CoCO2
      wetlands: wetlands.CoCO2
      bmb: bmb.CoCO2
    metacategories:
      total: fossil + agriwaste + bmb + wetlands + geological + termites + lakes + ocean
    path: ${run.paths.emissions}/${run.domain}
    prefix: flux_ch4.
    archive: rclone:lumia:fluxes/nc/${run.domain}


# Inversion settings (which categories, to optimize, which uncertainties, etc.)
optimize:
  emissions:
    ch4:
      total:
        annual_uncertainty: 5 TgCH4
        spatial_correlation: 500-e
        temporal_correlation: 30D
        error_structure: linear
        optimization_interval: 1d


# Transport model settings
model:
  path_temp : ${run.paths.temp}
  # Path to the main executable of the transport model
  executable : ${lumia:transport/multitracer.py}
  path_footprints : ${run.paths.footprints}
  split_categories: True
  # At which steps should (permanent) output be stored
  output_steps: ['apri', 'apos']
  serial : no
  path_output : ${run.paths.output}
  # At which steps should the obs uncertainties be computed
  setup_uncertainties : ['apri']
  # Arguments to be passed to the transport model.
  # Arguments under the "*" key are passed at each step. Other arguments are passed only at the relevant step.
  extra_arguments :
    apri : --check-footprints --copy-footprints ${machine.footprints_cache}
    "*" : -n ${run.ncores}
  # Additional fields that the model should store in the obs database
  extra_fields : [footprint, obsid]


# Minimizer settings (lanczos for the fortran-based minimizer, cg_scipy for the scipy one).
lanczos:
  gradient_norm_reduction: 1.e6
  number_of_iterations: 80
  communication_file: ${run.paths.temp}/congrad.nc
  executable: ${run.paths.congrad}
  output_path : ${run.paths.output}


cg_scipy:
  gradient_norm_reduction: ${lanczos.gradient_norm_reduction}
  number_of_iterations: ${lanczos.number_of_iterations}
  output_path: ${lanczos.output_path}
  # gtol : 0.005